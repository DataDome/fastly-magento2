name: "Code quality"

on:
  pull_request:
    branches: [master]

env:
  MAGENTO_CODING_STANDARD: "v25"

jobs:
  static_code_check:
    name: "Static code check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: phpcs, cs2pr

      - name: Install and setup Magento 2 coding standard
        run: |
          vendor_path=$(composer global config vendor-dir --absolute) && \
          composer global require magento/magento-coding-standard:${{ env.MAGENTO_CODING_STANDARD }} && \
          phpcs --config-set installed_paths "$vendor_path/magento/magento-coding-standard/,$vendor_path/phpcompatibility/php-compatibility/"

      - name: Run phpcs
        run: phpcs -n -q --report=checkstyle --standard=Magento2 . | cs2pr

  tests:
    name: "Tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - magento: "2.4.0"
            php: "7.3"
            composer: "v1"
          - magento: "2.4.0"
            php: "7.4"
            composer: "v1"
          - magento: "2.4.1"
            php: "7.4"
            composer: "v1"
          - magento: "2.4.2"
            php: "7.4"
            composer: "v1"
          - magento: "2.4.3"
            php: "7.4"
            composer: "v1"
          - magento: "2.4.4"
            php: "8.1"
            composer: "v2"
          - magento: "2.4.5"
            php: "8.1"
            composer: "v2"

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:${{ matrix.composer }}

      - name: Create Magento 2 project
        run: |
          composer create-project --repository-url="https://mirror.mage-os.org/" \
          "magento/project-community-edition=${{ matrix.magento }}" . --no-install

      - run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        id: composer-cache
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Magento 2
        run: composer install && mkdir -p app/code/Fastly/Cdn/

      - name: Setup Fastly CDN module
        uses: actions/checkout@v3
        with:
          path: "app/code/Fastly/Cdn/"

      - name: Setup Problem Matcher for PHPUnit
        run: echo "::add-matcher::${{ github.workspace }}/app/code/Fastly/Cdn/.github/tests/phpunit_matcher.json"

      - name: Run tests
        run: vendor/bin/phpunit -c dev/tests/unit/phpunit.xml.dist --teamcity app/code/Fastly/Cdn/
